version: '3.7'

x-default-logging: &default
  {}

x-loki-logging: &loki
  driver: loki
  options:
    loki-url: http://localhost:3100/loki/api/v1/push
    mode: non-blocking
    max-buffer-size: 4m
    loki-retries: "3"

x-log-config: &log-config
  # update this value to *loki if needed to see logs in grafana dashboard.
  <<: *default


services:

  proxy:
    image: 'bahmni/proxy:${PROXY_IMAGE_TAG:?}'
    #volumes:
      # - ${CERTIFICATE_PATH}:/etc/tls
    ports:
      - '80:80'
      - '443:443'
    logging: *log-config
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TZ}

  bahmni-config:
    image: 'bahmni/standard-config:${CONFIG_IMAGE_TAG:?}'
    volumes:
      - '${CONFIG_VOLUME:?}:/usr/local/bahmni_config'
    logging: *log-config
    restart: ${RESTART_POLICY}

  openelis:
    profiles: ["openelis","bahmni-standard"]
    image: 'bahmni/openelis:${OPENELIS_IMAGE_TAG:?[ERROR]}'
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      - "bahmni-uploaded-files:/home/bahmni/uploaded-files"
    environment:
      TZ: ${TZ}
      OPENMRS_HOST: ${OPENMRS_HOST}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
      OPENELIS_DB_SERVER: ${OPENELIS_DB_SERVER}
    depends_on:
      openelisdb:
        condition: service_healthy
    logging: *log-config
    restart: ${RESTART_POLICY}

  openelisdb:
    profiles: ["openelis","bahmni-standard"]
    image: '${OPENELIS_DB_IMAGE_NAME:?[ERROR]}'
    volumes:
      - '${OPENELIS_DB_DUMP_PATH}:/resources/db-dump'
      - 'openelisdbdata:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${OPENELIS_DB_USER:?}
      POSTGRES_PASSWORD: ${OPENELIS_DB_PASSWORD:?}
      POSTGRES_DB: ${OPENELIS_DB_NAME:?}
    logging: *log-config
    restart: ${RESTART_POLICY}

  odoo:
    profiles: ["odoo","bahmni-standard"]
    image: 'bahmni/odoo-16:${ODOO_IMAGE_TAG:?[ERROR]}'
    ports:
      - '8069:8069'
    volumes:
      - odooappdata:/var/lib/odoo
      - ${EXTRA_ADDONS_PATH}:/mnt/extra-addons
      - odoofilestore:/var/lib/odoo/filestore
      # # Uncomment the below volume only when you need to modify existing bahmni-addons. Also make sure to update the .env file variable with bahmni-odoo-modules github repo cloned path.
      # - ${BAHMNI_ODOO_MODULES_PATH}:/opt/bahmni-erp/bahmni-addons
    depends_on:
      odoodb:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      HOST: ${ODOO_DB_HOST}
      USER: ${ODOO_DB_USER}
      PASSWORD: ${ODOO_DB_PASSWORD}
    logging: *log-config
    restart: ${RESTART_POLICY}

  odoodb:
    profiles: ["odoo","bahmni-standard"]
    image: '${ODOO_DB_IMAGE_NAME:?[ERROR]}'
    volumes:
      - 'odoodbdata:/var/lib/postgresql/data'
      - 'odoofilestore:/filestore:ro'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U odoo']
      interval: 10s
      timeout: 5s
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${ODOO_DB_NAME:?}
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_USER: ${ODOO_DB_USER}
    logging: *log-config
    restart: ${RESTART_POLICY}

  odoo-connect:
    profiles: ["odoo","bahmni-standard"]
    image: 'bahmni/odoo-connect:${ODOO_CONNECT_IMAGE_TAG:?[ERROR]}'
    environment:
      TZ: ${TZ}
      IS_ODOO_16: true
      ODOO_DB_SERVER: ${ODOO_DB_HOST}
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      ODOO_HOST: ${ODOO_HOST:?}
      ODOO_PORT: ${ODOO_PORT:?}
      ODOO_ATOMFEED_USER: ${ODOO_ATOMFEED_USER:?}
      ODOO_ATOMFEED_PASSWORD: ${ODOO_ATOMFEED_PASSWORD:?}
    depends_on:
      odoodb:
        condition: service_healthy
    logging: *log-config
    restart: ${RESTART_POLICY}

#Serivces for odoo-10. These services are used for backward compatibility with bahmni 0.93
  odoo-10:
    profiles: ["odoo-10"]
    image: 'bahmni/odoo-10:${ODOO_IMAGE_TAG:?[ERROR]}'
    ports:
      - '8070:8069'
    volumes:
      - odoo10appdata:/var/lib/odoo
      - ${EXTRA_ODOO_10_ADDONS_PATH}:/mnt/extra-addons
      # # Uncomment the below volume only when you need to modify existing bahmni-addons. Also make sure to update the .env file variable with odoo-modules github repo cloned path.
      # - ${BAHMNI_ODOO_10_MODULES_PATH}:/opt/bahmni-erp/bahmni-addons
    depends_on:
      odoo-10-db:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      HOST: ${ODOO_10_DB_HOST}
      USER: ${ODOO_10_DB_USER}
      PASSWORD: ${ODOO_10_DB_PASSWORD}
    logging: *log-config
    restart: ${RESTART_POLICY}

  odoo-10-db:
    profiles: ["odoo-10"]
    image: '${ODOO_10_DB_IMAGE_NAME:?[ERROR]}'
    volumes:
      - '${ODOO_10_DB_DUMP_PATH}:/resources/db-dump'
      - 'odoo10dbdata:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U odoo']
      interval: 10s
      timeout: 5s
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${ODOO_10_DB_NAME:?}
      POSTGRES_PASSWORD: ${ODOO_10_DB_PASSWORD}
      POSTGRES_USER: ${ODOO_10_DB_USER}
    logging: *log-config
    restart: ${RESTART_POLICY}

  odoo-10-connect:
    profiles: ["odoo-10"]
    image: 'bahmni/odoo-connect:${ODOO_CONNECT_IMAGE_TAG:?[ERROR]}'
    environment:
      TZ: ${TZ}
      ODOO_DB_SERVER: odoo-10-db
      ODOO_DB_USERNAME: ${ODOO_10_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_10_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      ODOO_HOST: ${ODOO_10_HOST:?}
      ODOO_PORT: ${ODOO_10_PORT:?}
      ODOO_ATOMFEED_USER: ${ODOO_10_ATOMFEED_USER:?}
      ODOO_ATOMFEED_PASSWORD: ${ODOO_10_ATOMFEED_PASSWORD:?}
    depends_on:
      odoo-10-db:
        condition: service_healthy
    logging: *log-config
    restart: ${RESTART_POLICY}

  openmrs:
    profiles: ["emr","bahmni-standard", "bahmni-mart"]
    image: bahmni/openmrs:${OPENMRS_IMAGE_TAG:?}
    environment:
      TZ: ${TZ}
      OMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OMRS_DB_HOSTNAME: ${OPENMRS_DB_HOST:?}
      OMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OMRS_CREATE_TABLES: ${OPENMRS_DB_CREATE_TABLES}
      OMRS_AUTO_UPDATE_DATABASE: ${OPENMRS_DB_AUTO_UPDATE}
      OMRS_MODULE_WEB_ADMIN: ${OPENMRS_MODULE_WEB_ADMIN}
      # OMRS_DEV_DEBUG_PORT: ${OMRS_DEV_DEBUG_PORT}
      OMRS_JAVA_SERVER_OPTS: ${OMRS_JAVA_SERVER_OPTS}
      OMRS_JAVA_MEMORY_OPTS: ${OMRS_JAVA_MEMORY_OPTS}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      SEND_MAIL: ${SEND_MAIL}
      MAIL_TRANSPORT_PROTOCOL: ${MAIL_TRANSPORT_PROTOCOL}
      MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_ENABLE: ${MAIL_SMTP_SSL_ENABLE}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      OMRS_DOCKER_ENV: ${OPENMRS_DOCKER_ENV}
      OMRS_C3P0_MAX_SIZE: ${OMRS_C3P0_MAX_SIZE}
      WEIGHT_CONCEPT_UUID: ${WEIGHT_CONCEPT_UUID}
      HEIGHT_CONCEPT_UUID: ${HEIGHT_CONCEPT_UUID}
      OMRS_DB_EXTRA_ARGS: ${OMRS_DB_EXTRA_ARGS}
      LUCENE_MATCH_TYPE: ${LUCENE_MATCH_TYPE}
      DOCUMENT_MAX_SIZE_MB: ${DOCUMENT_MAX_SIZE_MB}
    #ports:
      # - ${OMRS_DEV_DEBUG_PORT}:${OMRS_DEV_DEBUG_PORT}
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      - "bahmni-uploaded-files:/home/bahmni/uploaded-files"
      # - "${BAHMNI_OPENMRS_MODULES_PATH:?}/:/openmrs/data/modules/"
      - 'bahmni-patient-images:/home/bahmni/patient_images'
      - 'bahmni-document-images:/home/bahmni/document_images'
      - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'
      - 'configuration_checksums:/openmrs/data/configuration_checksums'
      - 'sms-token:/openmrs/data/sms-token'
    depends_on:
      - openmrsdb
    logging: *log-config
    restart: ${RESTART_POLICY}

  openmrsdb:
    image: ${OPENMRS_DB_IMAGE_NAME:?}
    restart: always
    profiles: ["emr","bahmni-standard", "metabase", "bahmni-mart"]
    command: "--sql-mode=${OPENMRS_DB_SQL_MODES:?}"
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${OPENMRS_DB_NAME:?}
      MYSQL_USER: ${OPENMRS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
    volumes:
      - 'openmrsdbdata:/var/lib/mysql'
      - 'configuration_checksums:/configuration_checksums'
    logging: *log-config

  metabasedb:
    image: postgres:${METABASE_POSTGRES_IMAGE_TAG:?}
    restart: on-failure:[3]
    profiles: ["metabase", "bahmni-mart"]
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${METABASE_DB_NAME:?}
      POSTGRES_USER: ${METABASE_DB_USER:?}
      POSTGRES_PASSWORD: ${METABASE_DB_PASSWORD:?}
    volumes:
      - 'metabase-data:/var/lib/postgresql/data'

  metabase:
    image: bahmni/bahmni-metabase:${METABASE_IMAGE_TAG:?}
    restart: on-failure:[3]
    profiles: ["metabase", "bahmni-mart"]
    environment:
      TZ: ${TZ}
      MB_ADMIN_EMAIL: ${METABASE_ADMIN_EMAIL:?}
      MB_ADMIN_FIRST_NAME: ${METABASE_ADMIN_FIRST_NAME:?}
      MB_ADMIN_PASSWORD: ${METABASE_ADMIN_PASSWORD:?}
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_DB_NAME:?}
      MB_DB_PORT:  ${METABASE_DB_PORT:?}
      MB_DB_USER: ${METABASE_DB_USER:?}
      MB_DB_PASS: ${METABASE_DB_PASSWORD:?}
      MB_DB_HOST: ${METABASE_DB_HOST:?}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      MART_DB_HOST: ${MART_DB_HOST:?}
      MART_DB_NAME: ${MART_DB_NAME:?}
      MART_DB_USERNAME: ${MART_DB_USERNAME:?}
      MART_DB_PASSWORD: ${MART_DB_PASSWORD:?}
    depends_on:
     - metabasedb

  martdb:
    image: postgres:${BAHMNI_MART_DB_IMAGE_TAG:?}
    profiles: ["bahmni-mart"]
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${MART_DB_NAME:?}
      POSTGRES_USER: ${MART_DB_USERNAME:?}
      POSTGRES_PASSWORD: ${MART_DB_PASSWORD:?}
    volumes:
      - 'mart-data:/var/lib/postgresql/data'

  mart:
    image: bahmni/bahmni-mart:${BAHMNI_MART_IMAGE_TAG:?}
    profiles: ["bahmni-mart"]
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TZ}
      CRON_TIME: ${MART_CRON_TIME:?}
      MART_DB_HOST: ${MART_DB_HOST:?}
      MART_DB_NAME: ${MART_DB_NAME:?}
      MART_DB_USERNAME: ${MART_DB_USERNAME:?}
      MART_DB_PASSWORD: ${MART_DB_PASSWORD:?}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
    depends_on:
     - martdb
     - openmrsdb
     - openmrs
    volumes:
     - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'

  bahmni-web:
    image: bahmni/bahmni-web:${BAHMNI_WEB_IMAGE_TAG:?}
    profiles: ["emr","bahmni-standard","bahmni-mart"]
    volumes:
      - "${CONFIG_VOLUME:?}:/usr/local/apache2/htdocs/bahmni_config/:ro"
    #   - "${BAHMNI_APPS_PATH:?}/ui/app/:/usr/local/apache2/htdocs/bahmni"
    #   - "${BAHMNI_APPS_PATH:?}/ui/node_modules/@bower_components/:/usr/local/apache2/htdocs/bahmni/components"
    logging: *log-config
    restart: ${RESTART_POLICY}

  implementer-interface:
    image: bahmni/implementer-interface:${IMPLEMENTER_INTERFACE_IMAGE_TAG:?}
    profiles: ["implementer-interface","emr","bahmni-standard"]
    #volumes:
    #  - "${IMPLEMENTER_INTERFACE_CODE_PATH:?}/dist:/usr/local/apache2/htdocs/implementer_interface"
    depends_on:
      - openmrs
    logging: *log-config
    restart: ${RESTART_POLICY}

  reports:
    image: bahmni/reports:${REPORTS_IMAGE_TAG:?}
    profiles: ["reports","bahmni-standard"]
    environment:
      TZ: ${TZ}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENELIS_DB_SERVER: ${OPENELIS_DB_SERVER}
      REPORTS_DB_SERVER: reportsdb
      REPORTS_DB_NAME: ${REPORTS_DB_NAME:?}
      REPORTS_DB_USERNAME: ${REPORTS_DB_USERNAME:?}
      REPORTS_DB_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      ODOO_DB_SERVER: ${ODOO_DB_HOST:?}
      ODOO_DB_NAME: ${ODOO_DB_NAME:?}
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
      ICD10_LITE_INDICATOR: ${ICD10_LITE_INDICATOR}
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-queued-reports:/home/bahmni/reports"
    # - "../snomed-resources/icd10-extensions-1.0.0-SNAPSHOT.jar:/var/run/bahmni-reports/bahmni-reports/WEB-INF/lib/icd10-extensions-1.0.0-SNAPSHOT.jar:ro"
    depends_on:
      - reportsdb
      - openmrsdb
      - bahmni-web
    logging: *log-config
    restart: ${RESTART_POLICY}

  reportsdb:
    platform: linux/amd64
    image: ${REPORTS_DB_IMAGE_NAME:?}
    profiles: ["reports","bahmni-standard"]
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${REPORTS_DB_NAME:?}
      MYSQL_USER: ${REPORTS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:?}
    volumes:
      - 'reportsdbdata:/var/lib/mysql'
    logging: *log-config
    restart: ${RESTART_POLICY}

  patient-documents:
    image: 'bahmni/patient-documents:${PATIENT_DOCUMENTS_TAG:?}'
    profiles: ["emr","bahmni-standard"]
    volumes:
      - 'bahmni-document-images:/usr/share/nginx/html/document_images'
      - 'bahmni-lab-results:/usr/share/nginx/html/uploaded_results'
      - "bahmni-uploaded-files:/usr/share/nginx/html/uploaded-files"
    environment:
      TZ: ${TZ}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
    depends_on:
      - openmrs
    logging: *log-config
    restart: ${RESTART_POLICY}

  appointments:
    image: bahmni/appointments:${APPOINTMENTS_IMAGE_TAG:?}
    profiles: ["emr","bahmni-standard"]
    restart: ${RESTART_POLICY}
    # volumes:
    # - "${APPOINTMENTS_PATH:?}/dist/:/usr/local/apache2/htdocs/appointments"

  dcm4chee:
    image: bahmni/dcm4chee:${DCM4CHEE_IMAGE_TAG:?}
    profiles: ["pacs","bahmni-standard"]
    environment:
      TZ: ${TZ}
      DB_HOST: ${PACS_DB_HOST:?}
      DB_PORT: ${PACS_DB_PORT:?}
      DB_NAME: ${DCM4CHEE_DB_NAME:?}
      DB_USERNAME: ${DCM4CHEE_DB_USERNAME:?}
      DB_PASSWORD: ${DCM4CHEE_DB_PASSWORD:?}
    ports:
      - '8055:8055'
      - '11112:11112'
    volumes:
      - 'dcm4chee-archive:/var/lib/bahmni/dcm4chee/server/default/archive'
      - 'dcm4chee-config:/var/lib/bahmni/dcm4chee/server/default/data/xmbean-attrs'
    logging: *log-config
    restart: ${RESTART_POLICY}

  pacs-integration:
    image: bahmni/pacs-integration:${PACS_INTEGRATION_IMAGE_TAG:?}
    profiles: ["pacs","bahmni-standard"]
    environment:
      TZ: ${TZ}
      DB_HOST: ${PACS_DB_HOST:?}
      DB_PORT: ${PACS_DB_PORT:?}
      DB_NAME: ${PACS_INTEGRATION_DB_NAME:?}
      DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME:?}
      DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
    logging: *log-config
    restart: ${RESTART_POLICY}

  pacsdb:
    image: postgres:9.6
    profiles: ["pacs","bahmni-standard"]
    environment:
      TZ: ${TZ}
      POSTGRES_PASSWORD: ${PACS_DB_ROOT_PASSWORD}
      DCM4CHEE_DB_NAME: ${DCM4CHEE_DB_NAME:?}
      DCM4CHEE_DB_USERNAME: ${DCM4CHEE_DB_USERNAME:?}
      DCM4CHEE_DB_PASSWORD: ${DCM4CHEE_DB_PASSWORD:?}
      PACS_INTEGRATION_DB_NAME: ${PACS_INTEGRATION_DB_NAME:?}
      PACS_INTEGRATION_DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME:?}
      PACS_INTEGRATION_DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD:?}
    volumes:
      - '${PWD}/init_pacs_dbs.sh:/docker-entrypoint-initdb.d/init_pacs_dbs.sh'
      - 'pacsdbdata:/var/lib/postgresql/data'
    logging: *log-config
    restart: ${RESTART_POLICY}

  pacs-simulator:
    image: bahmni/pacs-simulator:${PACS_SIMULATOR_IMAGE_TAG:?}
    profiles: ["pacs-simulator"]
    environment:
      TZ: ${TZ}
      PACS_SIMULATOR_TIMEOUT: ${PACS_SIMULATOR_TIMEOUT:?}
      PACS_SERVER_TYPE: ${PACS_SERVER_TYPE:?}
      PACS_SERVER_URL: ${PACS_SERVER_URL:?}
      UPDATE_PACS_INTEGRATION_DB: ${UPDATE_PACS_INTEGRATION_DB:?}
      PACS_INTEGRATION_DB_HOST: ${PACS_DB_HOST:?}
      PACS_INTEGRATION_DB_PORT: ${PACS_DB_PORT:?}
      PACS_INTEGRATION_DB_NAME: ${PACS_INTEGRATION_DB_NAME:?}
      PACS_INTEGRATION_DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME:?}
      PACS_INTEGRATION_DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD:?}
    logging: *log-config
    restart: ${RESTART_POLICY}


  atomfeed-console:
    image: bahmni/atomfeed-console:latest
    profiles: ["atomfeed-console"]
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TZ}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
      ODOO_DB_HOST: ${ODOO_DB_HOST}
      ODOO_DB_NAME: ${ODOO_DB_NAME}
      ODOO_DB_USER: ${ODOO_DB_USER}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD}
      OPENELIS_DB_HOST: ${OPENELIS_DB_HOST}
      OPENELIS_DB_USER: ${OPENELIS_DB_USER}
      OPENELIS_DB_PASSWORD: ${OPENELIS_DB_PASSWORD}
      PACS_INTEGRATION_DB_HOST: ${PACS_DB_HOST}
      PACS_INTEGRATION_DB_NAME: ${PACS_INTEGRATION_DB_NAME}
      PACS_INTEGRATION_DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME}
      PACS_INTEGRATION_DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD}

  sms-service:
    image: bahmni/sms-service:${SMS_SERVICE_IMAGE_TAG:?}
    profiles: ["sms"]
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TZ}
      SMS_TOKEN: ${SMS_TOKEN}
      SMS_ORIGINATOR: ${SMS_ORIGINATOR}
      SMS_PROVIDER_API: ${SMS_PROVIDER_API}
      SMS_OPENMRS_HOST: ${OPENMRS_HOST:?}
      SMS_OPENMRS_PORT: ${OPENMRS_PORT:?}
      SMS_COUNTRY_CODE: ${SMS_COUNTRY_CODE}
    volumes:
      - 'sms-token:/opt/tokens'

  restore_volumes:
    image: bash:5.2.15
    profiles: ["restore"]
    command: "bash /restore_docker_volumes.sh"
    volumes:
        - "${RESTORE_ARTIFACTS_PATH}:/restore-artifacts"
        - '../backup_restore/restore_docker_volumes.sh:/restore_docker_volumes.sh'
        - 'bahmni-patient-images:/mounts/bahmni-patient-images'
        - 'bahmni-document-images:/mounts/bahmni-document-images'
        - 'bahmni-clinical-forms:/mounts/bahmni-clinical-forms'
        - 'bahmni-lab-results:/mounts/bahmni-lab-results'
        - 'bahmni-queued-reports:/mounts/bahmni-queued-reports'
        - 'bahmni-uploaded-files:/mounts/bahmni-uploaded-files'
        - 'dcm4chee-archive:/mounts/dcm4chee-archive'
        - 'configuration_checksums:/mounts/configuration_checksums'

  ipd:
    image: bahmni/microfrontend-ipd:${IPD_TAG:?}
    container_name: ipd
    profiles: ["emr","bahmni-standard","bahmni-mart"]
    restart: ${RESTART_POLICY}
    # volumes:
    #   - "${IPD_PATH:?}/dist/federation/:/usr/local/apache2/htdocs/ipd"
    logging: *log-config

  cdss:
    profiles: [ "cdss" ]
    image: bahmni/cdss-reference:${CDSS_IMAGE_TAG:?}
    environment:
      JAVA_OPTS: ${CDSS_JAVA_SERVER_OPTS}
    logging: *log-config

  snowstorm-lite:
    profiles: [ "snowstorm-lite" ]
    image: snomedinternational/snowstorm-lite:${SNOWSTORM_LITE_IMAGE_TAG:?}
    environment:
      JDK_JAVA_OPTIONS: ${SNOWSTORM_LITE_JAVA_SERVER_OPTS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/fhir/CodeSystem"]
      interval: 60s
      timeout: 15s
      retries: 10
    logging: *log-config

  load-snowstorm-lite-data:
    profiles: [ "snowstorm-lite" ]
    image: alpine
    command: "sh /load-snowstorm-data.sh"
    environment:
      SNOWSTORM_LITE_ADMIN_PASSWORD: ${SNOWSTORM_LITE_ADMIN_PASSWORD:?}
    logging: *log-config
    volumes:
      - '../snomed-resources/load-snowstorm-data.sh:/load-snowstorm-data.sh'
    #  - "${SNOWSTORM_RF2_FILE_PATH:?}:/snowstorm-data/snomed-data.zip:ro"


volumes:
  openelisdbdata:
  odoodbdata:
  odooappdata:
  odoofilestore:
  odoo10dbdata:
  odoo10appdata:
  openmrs-data:
  openmrsdbdata:
  metabase-data:
  mart-data:
  bahmni-patient-images:
  bahmni-document-images:
  bahmni-clinical-forms:
  dcm4chee-archive:
  bahmni-config:
  bahmni-lab-results:
  bahmni-uploaded-files:
  configuration_checksums:
  sms-token:
  bahmni-queued-reports:
  reportsdbdata:
  pacsdbdata:
  dcm4chee-config:
