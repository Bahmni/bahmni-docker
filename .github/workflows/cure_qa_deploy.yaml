name: Deploy to Cure QA Env
on:
  push:
    branches:
      - cure-master
    paths:
      - 'bahmni/**'
      - '.github/workflows/cure_qa_deploy.yaml'
  repository_dispatch:
    types:
      - bahmni-ipd-appointments-event
      - openmrs-ipd-openmrs-event
      - bahmni-ipd-event-router-service-event
  workflow_dispatch:
    inputs:
      update_bahmni_option:
        description: 'Choose the option to update Bahmni. "Update without removing volumes" or "Update and remove volumes"'
        required: true
        type: choice
        default: update_without_removing_volumes
        options:
          - update_without_removing_volumes
          - update_and_remove_volumes
env:
  UPDATE_BAHMNI_OPTION: ${{ github.event.inputs.update_bahmni_option || 'update_without_removing_volumes'}}

jobs:
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Trivy Scan
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/trivy_scan.sh && chmod +x trivy_scan.sh
          ./trivy_scan.sh
          rm trivy_scan.sh
  deploy:
    name: Deploy to QA Instance
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: Authenticate the Service Account
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.CURE_EMR_DEPLOYMENTS_SERVICE_ACCOUNT_KEY }}
      - id: 'set-command-value'
        name: Set command value based on options chosen
        run: |
          if [ "$UPDATE_BAHMNI_OPTION" == "update_without_removing_volumes" ]; then
              the_command="docker compose \
                  --env-file config/.env.qa \
                  -f docker-compose.yml \
                  -f docker-compose.override.yml \
                  -f ../logging/docker-compose.yml up -d"
              echo "command=$the_command" >> "$GITHUB_OUTPUT"
          elif [ "$UPDATE_BAHMNI_OPTION" == "update_and_remove_volumes" ]; then
              the_command="docker compose \
                  --env-file config/.env.qa \
                  -f docker-compose.yml \
                  -f docker-compose.override.yml \
                  -f ../logging/docker-compose.yml down -v \
                  && docker compose \
                  --env-file config/.env.qa \
                  -f docker-compose.yml \
                  -f docker-compose.override.yml \
                  -f ../logging/docker-compose.yml up -d"
              echo "command=$the_command" >> "$GITHUB_OUTPUT"
          fi
      
      - id: 'compute-ssh'
        name: Send commands via SSH
        uses: 'google-github-actions/ssh-compute@v0'
        with:
          instance_name: '${{ secrets.CURE_EMR_QA_INSTANCE_NAME }}'
          zone: 'us-central1-a'
          user: '${{ secrets.CURE_EMR_DEPLOYMENTS_USERNAME }}'
          ssh_private_key: '${{ secrets.CURE_EMR_DEPLOYMENTS_SSH_PRIVATE_KEY }}'
          command: |
            . ~/.bash_profile
            cd cure-bahmni-docker/bahmni
            git pull -r
            docker compose pull
            ${{ steps.set-command-value.outputs.command }}
            docker image prune -f
    
      - id: 'print'
        name: Print the command outputs
        run: |-
          echo '${{ steps.compute-ssh.outputs.stdout }}'
          echo '${{ steps.compute-ssh.outputs.stderr }}'